#!/bin/bash

cached_client_path="/tmp/tmux-pane-view-client"
cached_target_path="/tmp/tmux-pane-target"
cached_client_path_alt="/tmp/tmux-pane-view-client-alt"
cached_target_path_alt="/tmp/tmux-pane-target-alt"
alt_client="false"
alt_client_arg=""

for arg in "$@"; do
    case "$arg" in
        --class=*)
            class="${arg#--class=}"
            ;;
        --alacritty_theme=*)
            alacritty_theme="${arg#--alacritty_theme=}"
            ;;
        --cmd=*)
            cmd="${arg#--cmd=}"
            ;;
        --alt-client)
            alt_client="true"
            alt_client_arg=" --alt-client"
            ;;
    esac
done

get_view_client_path () {
    if [ $alt_client == "true" ] || [ "$1" == "--alt" ]; then
        echo $cached_client_path_alt
    else
        echo $cached_client_path
    fi
}

get_view_client () {
    if [ -f $(get_view_client_path $@) ]; then
        cat $(get_view_client_path $@)
    fi
}

get_target_path () {
    if { [ "$1" == "--alt" ]; } \
    || { [ "$1" != "--invert" ] && [ "$alt_client" == "true" ]; } \
    || { [ "$1" == "--invert" ] && [ "$alt_client" == "false" ]; }; then
        echo "$cached_target_path_alt"
    else
        echo "$cached_target_path"
    fi
}

get_target () {
    local path=$(get_target_path $@)
    if [ -f $path ]; then
        cat $path
    fi
}


set_status_inner () {
    local target="$1"
    local mode="$2"
    local tSet="tmux set -p -t $target"
    if [ $mode = "none" ]; then
        $tSet -u status
        $tSet -u status-left
        $tSet -u status-left-length
        $tSet -u status-position
        $tSet -u status-bg
        $tSet -u status-fg

    else
        local view_client=$(get_view_client)
        local escaped_target=$(echo "$target" | sed 's/%/%%/g') 
        local pv_label="[PANE-VIEW "
        if [ $alt_client = 'true' ]; then
            pv_label+="(ALT) "
        fi
        pv_label+="$escaped_target -> $view_client]"

        local ssh_label="[ssh]"

        set_left () {
            local left+="$1  "
            local left_length=$((${#left} + 1))
            $tSet status-left "$left" 
            $tSet status-left-length $left_length
        }

        case "$mode" in
            "ssh")
                set_left "$ssh_label"
                $tSet status on
                $tSet status-position top
                $tSet status-bg blue
                $tSet status-fg white
                ;;
            "ssh+pane-view")
                set_left "$ssh_label $pv_label"
                $tSet status on
                $tSet status-position top
                $tSet status-fg blue
                if [ $alt_client == "true" ]; then
                    $tSet status-bg "#797979"
                else
                    $tSet status-bg "white"
                fi
                ;;
            "pane-view")
                set_left "$pv_label"
                $tSet status on
                $tSet status-position top
                $tSet status-fg black
                if [[ $alt_client = "true" ]]; then
                    $tSet status-bg "#797979"
                else
                    $tSet status-bg "white"
                fi
                ;;
        esac
    fi
}

set_status () {
    local target="$1"
    if [ $target = $(get_target --alt) ]; then
        alt_client="true"
    fi
    local p="$target"0.0
    local mode="$2"

    local status_on=$(tmux display -p -t $p "#{status}")
    local old_left=$(tmux display -p -t $p "#{status-left}")

    case "$mode" in
        "no-status")
            set_status_inner $p "none" 
            ;;
        "exit-ssh")
            if [ $status_on = "on" ] && [[ $old_left == *"PANE-VIEW"* ]]; then
                set_status_inner $p "pane-view"
            else
                set_status_inner $p "none"
            fi
            ;;
        "ssh")
            if [[ $old_left != *"ssh"* ]]; then
                if [ $status_on = "on" ] && [[ $old_left == *"PANE-VIEW"* ]]; then
                    set_status_inner $p "ssh+pane-view"
                else
                    set_status_inner $p "ssh"
                fi
            fi
            ;;
        "pane-view")
            if [[ $old_left != *"PANE-VIEW"* ]]; then
                if [ $status_on = "on" ] && [[ $old_left == *"ssh"* ]]; then
                    set_status_inner $p "ssh+pane-view"
                else
                    set_status_inner $p "pane-view"
                fi
            fi
            ;;
    esac
}

set_new_target () {
    local view_client=$(get_view_client)
    local target="$1"

    if [ $target = $(get_target --invert) ]; then
        echo "$target" already in use.
        exit 1
    elif [ -z "$view_client" ] || [ -z "$(tmux list-clients | grep -w $view_client)" ]; then
        echo "No pane-view client found."
        exit 1
    elif [ -z "$target" ]; then
        echo "No pane-view target found."
        exit 1
    fi

    local old_target=$(get_target)

    if [ -n "$old_target" ] && [ "$old_target" != "$target" ]; then
        set_status $old_target "no-status"
    fi

    local target_path=$(get_target_path)
    echo $target>$target_path

    set_status $target "pane-view"

    tmux switch-client -c "$view_client" -t "$target" 
}

if [ -z "$1" ] || [ -n "$alacritty_theme" ] || [ -n "$class" ]; then

    target_path=$(get_target_path)
    client_path=$(get_view_client_path)

    class_arg="--class "
    if [ -n "$class" ]; then
        class_arg+="$class"
    else
        class_arg+="tmux-pane-view"
    fi

    theme_arg=""
    if [ -n "$alacritty_theme" ]; then
        theme_arg="--config-file $alacritty_theme"
    fi

    sessions=$(tmux list-sessions -F "#{session_name} #{pane_height} #{pane_width}" -f '#{m:1,#{session_attached}}')
    
    # initially attach the view to the widest pane:
    max_width=0
    while read -r line; do
        if [[ $line == *"_child"* ]]; then
            width=$(echo "$line" | awk '{print $3}')
            if (( width > max_width )); then
                max_width=$width
                widest=$(echo "$line" | awk '{print $1}')
            fi
        fi
    done <<< "$sessions"

    alacritty -o font.size=14 $class_arg $theme_arg -e sh -c \
    "
    trap '
    target=\$(cat \"$target_path\");
    rm -f $client_path $target_path;
    if [ -n \"\$target\" ]; then
        tmux set -u -pt \$target status;
        tmux set -u -pt \$target status-left;
        tmux set -u -pt \$target status-position;
    fi
    ' EXIT;
    tmux-pane-view --record-client-id$alt_client_arg && tmux attach-session -t \"$widest:\"
    " &

    sleep 1
    set_new_target "$widest:"


    exit 0
fi

if [ "$1" == "--target-current-pane" ]; then
    parent_pane=$(tmux display -p "#{pane_id}")
    child_session=""$parent_pane"_child:"

    set_new_target $child_session

    exit 0
fi

if [ "$1" == "--pane-to-session" ]; then
    parent_pane="$TMUX_PANE"
    child_session="$parent_pane"_child

    if [ -n "$cmd" ]; then
        TMUX= tmux new -s $child_session "$cmd"
    else
        TMUX= tmux new -s $child_session
    fi

    exit 0
fi

if [ "$1" == "--record-client-id" ]; then
    client_path=$(get_view_client_path)
    tmp_sess="tmux-pane-view-tmp-session$alt_client"
    tmux new-session -s $tmp_sess \
    "tmux list-clients -F '#{client_name} #{client_session}' \
    | grep -w $tmp_sess \
    | awk '{print \$1}' \
    >$client_path \
    && sleep 0.1 && tmux detach"
    exit 0
fi

if [ "$1" == "--set-status" ]; then
    set_status $2 $3
    exit 0
fi
