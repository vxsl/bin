#!/bin/bash

# Convenience script for finding a tmux session by name and attaching to it.
# The session will be created if it doesn't exist, and a predefined layout will
# be applied. An initial working directory can be specified as the second argument.
#
# ex.
#  tmuxa mysession --dir=~/projects/myproject

if [ $# -lt 1 ] || [ $# -gt 4 ]; then
    echo "usage: tmuxa <session-name> [--dir=<dir>] [--no-layout] [--cmd=<cmd>]"
    exit 1
fi

# Default values
session_name="$1"
no_layout=false
dir="$HOME"
cmd=""

# Loop through the arguments to automatically assign variables
for arg in "$@"; do
    case "$arg" in
        --dir=*)
            dir="${arg#--dir=}"
            ;;
        --no-layout)
            no_layout=true
            ;;
        --cmd=*)
            cmd="${arg#--cmd=}"
            ;;
    esac
done

cd $dir

p2s="tmux-pane-view --pane-to-session"
if [ -n "$cmd" ]; then
    p2s="$p2s --cmd=\"$cmd\""
fi

# If the session doesn't exist, create it and set up the layout
if ! tmux has-session -t "$1" 2>/dev/null; then
    if [ "$no_layout" = false ]; then
        tmux new-session -d -s "$1" $p2s \; \
        split-window -v -l "90%" $p2s \; \
        select-pane -t 0 \; \
        split-window -h $p2s \; \
        split-window -h $p2s \; \
        select-pane -t 3 \; \
        setw window-active-style bg=black 
    else
        tmux new-session -d -s "$1" "$p2s"
    fi
    tmux list-panes -a -F '#{pane_id} #{session_name}' >>/home/kyle/test.log;

    sessions=$(tmux list-panes -a -F '#{pane_id} #{session_name}' | grep _child | awk '{print $2}')

    for session in $sessions; do
        pane="$session":0.0
        tmux set -p -t $pane monitor-activity on
        tmux set -p -t $pane activity-action current
        tmux set-hook -p -t $pane alert-activity \
            "run-shell '\
            if tmux display -p -t $pane #{pane_current_command} | grep "^ssh" >/dev/null; then \
                tmux-pane-view --set-status $session: ssh
            else
                tmux-pane-view --set-status $session: exit-ssh
            fi'"
    done
fi


# Otherwise, attach to the session
tmux attach -t "$session_name"
